###lets create a persistent volume
###to do the same we will create an directory
###login to the second machine
sudo -i
mkdir /mnt/data
ls
############################
####lets create the pv from master node
vi pv.yml
#########################
apiVersion: v1 
kind: PersistentVolume
metadata:
  name: task-pv-volume
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce #readwritemany #read
  persistentVolumeReclaimPolicy: Recycle #once you delete the pod the data inside the storage get deleted
 #retain #delete
 # storageClassName: slow
  ##hostpath volume
  hostPath:
    path: /mnt/data
####verify it
 362  kubectl apply -f pv.yml
  363  kubectl get pv
  364  kubectl describe pv task-pv-volume
##question for exam
create a persistent volume with the name app-data, of capacity 2Gi and access mode ReadWriteMany. The type of volume hostPath and its location is /srv/app-data
###to do this exercise open kubernetes.io
configure a pod to use a persistentvolume for storage

###lets create dynamic volume
 382  kubectl delete pv task-pv-volume
  383  kubectl delete pvc task-pv-claim
######lets create pv and pvc again
vi pv.yml
############################################
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce #readwritemany #read
  persistentVolumeReclaimPolicy: Recycle #once you delete the pod the data inside the storage get deleted
 #retain #delete
#  storageClassName: slow
  ##hostpath volume
  hostPath:
    path: /mnt/data
##################################
 360  kubectl apply -f pv.yml
386  kubectl get pv
####lets create pvc
vi pvc.yml
##################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
####verify it
 387  kubectl apply -f pvc.yml
  388  kubeclt get pvc
  390  kubectl get pv

