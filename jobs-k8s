 698  vi jobs.yml
################################
apiVersion: batch/v1
kind: Job
metadata:
  name: node-app-job
spec:
  template:
    spec:
      containers:
        - name: node-app-job
          image: alpine
          command: ["echo","welcome to my node app"]
      restartPolicy: Never #onfailure
  699  kubectl apply -f jobs.yml
  700  kubectl get pod
  701  kubectl logs node-app-job-f99fh
  702  history
  703  kubectl get job
###completion
apiVersion: batch/v1
kind: Job
metadata:
  name: node-app-job2
spec:
  completions: 10 #this is the max number of pod doing your job
  parallelism: 2 ###in two sets
  template:
    spec:
      containers:
        - name: node-app-job
          image: alpine
          command: ["echo","welcome to my node app1"]
      restartPolicy: Never #onfailure
####try the completions
 699  kubectl apply -f jobs.yml
  700  kubectl get pod
###what will happen if you job is failing you can define backofflimit
apiVersion: batch/v1
kind: Job
metadata:
  name: node-app-fail
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
        - name: node-app-job
          image: alpine
          command: ["ls","/data"]
      restartPolicy: Never #onfailure

