###lets create a namespace and label it
kubectl create ns cassandra
###label it
kubectl edit ns cassandra
####################################
# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2024-02-23T09:52:55Z"
  labels:
    kubernetes.io/metadata.name: cassandra
    ns: cassandra ##add this line
  name: cassandra
  resourceVersion: "211493"
  uid: 9c7134ec-674a-4679-aeb9-f086be78f8c5
spec:
  finalizers:
  - kubernetes
status:
  phase: Active
#####save the above mentioned file
  997  kubectl -n cassandra run cassandra --image=nginx
  999  kubectl -n cassandra get pod -o wide
 1001  kubectl exec backend -- curl 192.168.1.27
##still not work (as we have denied everything)

we will create an rule in backend.yml 
################################################
 1007  vi backend.yml
 1008  kubectl apply -f backend.yml
 1009  kubectl exec backend -- curl 192.168.1.27
##this policy will cupdate rule between backend to casasndra namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend
  namespace: default
spec:
  podSelector:
    matchLabels:
      run: backend
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
     -  podSelector:
          matchLabels:
            run: frontend
####add the egress rule to the namespace cassandra
  egress:
  - to:
     -  namespaceSelector:
          matchLabels:
            ns: cassandra
###then test it 
 1008  kubectl apply -f backend.yml
 1009  kubectl exec backend -- curl 192.168.1.27
