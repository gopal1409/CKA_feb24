####first we want to create dynamic storage and manage the local disk resources. 
###to do the same simply install the fillowing utilitly
kubectl get sc
###currenly there is no storage class 
###storage class in k8s are being used to dynamically create storage in the cloud.
##below mentioned utility will create a local storage class
kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.24/deploy/local-path-storage.yaml
##########
kubectl get sc
####this will show you the storage class whcih is being created
local-path   rancher.io/local-path   Delete          WaitForFirstConsumer   false                  3h1m

####statefulset
vi state.yml
#############################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 2 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: registry.k8s.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www-nginx
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi

#####apply this manifest
kubectl apply -f state.yml
